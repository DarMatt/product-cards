{"version":3,"sources":["components/ProductCard/ProductCard.jsx","components/ProductList/ProductList.jsx","components/NewProductCard/NewProductCard.jsx","App.js","components/api/api.jsx","reportWebVitals.js","index.js"],"names":["ProductCard","product","className","src","alt","name","price","description","ProductList","products","map","id","NewProductCard","addProduct","useState","setProduct","setName","setPrice","setDescription","useEffect","Date","onSubmit","event","preventDefault","type","placeholder","required","value","onChange","target","trimLeft","class","multiple","for","App","setProducts","sortValue","setSortValue","numberFrom","setNumberFrom","numberTo","setNumberTo","fetch","then","response","ok","json","productsFromServer","filteredProducts","useMemo","filter","console","log","sortedProducts","sort","a","b","localeCompare","Infinity","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0057ef20.chunk.js","sourcesContent":["import React from 'react';\nimport  './ProductCard.css';\n\nexport const ProductCard = ({ product }) => {\n  \n  return (\n    <>\n      <figure className=\"product-image\">\n        <img\n          src={'/public/api/img/1.jpg'}\n          alt={product.name}\n        />\n      </figure>\n\n      <div className=\"product-inner\">\n        <h3 className=\"product-title\">{product.name}</h3>\n        <p className=\"product-price\">{product.price}</p>\n        <p className=\"product-desc\">{product.description}</p>\n      </div>\n    </>\n  )\n}","import React from 'react';\nimport { ProductCard } from '../ProductCard/ProductCard';\nimport './ProductList.css';\n\nexport const ProductList = ({ products }) => {\n  \n  return (\n    <>\n      <ul className=\"product-list\">\n        {products.map(product => (\n          <li className=\"product-item\" key={product.id}>\n            <ProductCard product={ product }/>\n          </li>\n        ))}\n      </ul>\n    </>\n  )\n}","import React, { useEffect, useState } from 'react';\n\nexport const NewProductCard = ({addProduct}) => {\n  const [product, setProduct] = useState({});\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [file, setFile] = useState('');\n  const [description, setDescription] = useState('');\n\n  useEffect(() => {\n    setProduct({\n      id : +new Date(),\n      name, price, description\n    })\n  }, [name,price,description])\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n      addProduct(product);\n\n    setName('');\n    setPrice('');\n    setDescription('');\n  }\n\n  // console.log(product);\n\n  return (\n    <form className=\"new-product\"\n      onSubmit={handleSubmit}\n    >\n      <label className=\"new-product-label\">\n        Имя\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          className=\"new-product-input new-name\"\n          required\n          value={name}\n          onChange={(event) => setName(event.target.value.trimLeft())}\n        />\n      </label>\n  \n      <label className=\"new-product-label\" />\n        Цена\n      <input\n        type=\"number\"\n        // value=\"1000\"\n        required\n        className=\"new-product-input new-price\"\n        value={price}\n        onChange={(event) => setPrice(event.target.value)}\n      />\n      \n      <div class=\"input__wrapper\">\n        <input\n          name=\"file\"\n          type=\"file\"\n          id=\"input__file\"\n          required\n          class=\"input input__file\"\n          multiple\n        />\n        <div className=\"art\">Изображение</div> \n        <label for=\"input__file\" class=\"input__file-button\">\n          <span class=\"input__file-icon-wrapper\">\n            +  \n          </span>\n          </label>\n      </div>\n  \n      <textarea\n        placeholder=\"Description\"\n        className=\"new-product-label\"\n        required\n        value={description}\n        onChange={(event) => setDescription(event.target.value.trimLeft())}\n      >\n\n      </textarea>\n      <button type=\"submit\" className=\"new-product-save\">Save</button>\n    </form>\n  )\n}","import React, { useEffect, useMemo, useState } from 'react';\nimport { getProducts } from './components/api/api.jsx';\nimport { ProductList } from './components/ProductList/ProductList.jsx';\nimport './App.css';\nimport { NewProductCard } from './components/NewProductCard/NewProductCard.jsx';\n\nexport const App = () => {\n  const [products, setProducts] = useState([]);\n  const [sortValue, setSortValue] = useState('alphabetically');\n  const [numberFrom, setNumberFrom] = useState(0);\n  const [numberTo, setNumberTo] = useState(100000);\n\n  useEffect(() => {\n    getProducts().then(productsFromServer => {\n      setProducts(productsFromServer.products)\n    })\n  }, []);\n\n  const addProduct = (product) => {\n    console.log(product)\n    setProducts([...products, product])\n  }\n  \n  const filteredProducts = useMemo(() => products.filter((product) => {\n    return product.price >= numberFrom && product.price <= numberTo\n  }), [numberTo, numberFrom, sortValue, products])\n\n  console.log(products)\n\n  const sortedProducts = useMemo(() => {\n     switch (sortValue) {\n      case 'alphabetically':\n       return  [...filteredProducts].sort((a, b) => (\n          a.name.localeCompare(b.name)\n        ))\n\n      case 'ascending':\n        return[...filteredProducts].sort((a, b) => (\n          a.price - b.price\n        ))\n  \n      case 'descending':\n        return [...filteredProducts].sort((a, b) => (\n          b.price - a.price\n        ));\n       \n        default:\n        return filteredProducts\n    }\n  },[sortValue, filteredProducts])\n  \n  \n  // console.log(numberFrom)\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"content\">\n        <div className=\"content-sort\">\n          <form>\n            <h2 className=\"content-price\">Цена</h2>\n            <div className=\"content-inner-label\">\n            <label className=\"content-from-label\">\n                от:\n              <input\n                  className=\"content-from\"\n                  type=\"number\"\n                  onChange={(event) => setNumberFrom(event.target.value)}\n              />\n              </label>\n              <label className=\"content-to-label\">\n                до:\n              <input\n                  type=\"number\"\n                  className=\"content-to\"\n                  onChange={(event) => {\n                    if (!event.target.value) {\n                      setNumberTo(Infinity)\n                    } else {\n                      setNumberTo(event.target.value)\n                    }}}\n                />\n              </label>\n              </div>\n            <h2 className=\"currency\">Валюта</h2>\n            <button type=\"button\">USD</button>\n            <button type=\"button\">UAH</button>\n            <h2 className=\"content-sort\">Сортировка</h2>\n            <label className=\"radio-button\">\n              <input\n                className=\"radio-input\"\n                type=\"radio\"\n                name=\"sorting\"\n                value=\"ascending\"\n                onClick={(event) => setSortValue(event.target.value)}\n              />\n              по возростанию цены\n            </label>\n\n            <label className=\"radio-button\">\n              <input\n                className=\"radio-input\"\n                type=\"radio\"\n                name=\"sorting\"\n                value=\"descending\"\n                onClick={(event) => setSortValue(event.target.value)}\n            />\n              по убыванию цены\n            </label>\n\n            <label className=\"radio-button\">\n              <input\n                className=\"radio-input\"\n                type=\"radio\"\n                name=\"sorting\"\n                value=\"alphabetically\"\n                onClick={(event) => setSortValue(event.target.value)}\n              />\n              по алфавиту\n            </label>\n          </form>\n          <NewProductCard addProduct={addProduct} />\n          </div>\n        <div className=\"product-list\">\n          <ProductList products={ sortedProducts }/>\n        </div>\n      </div>\n    </div>\n  )\n}\n","const MAIN_URL = 'https://darmatt.github.io/product-cards';\n\nexport const getProducts = () => {\n  return fetch(`${MAIN_URL}/api/products.json`)\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    })\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}